<ResourceDictionary
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
        <Setter Property="BorderBrush" Value="{DynamicResource StandardBackgroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource StandardBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ItemsPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource GrayBrush9}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource StandardBackgroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource StandardBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Transparent" />
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverBackgroundBrush}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="TextBlock.Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="ListBoxItemRoot"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Uid="ListBoxItemRoot">
                        <ContentPresenter x:Name="ListBoxItemContent"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Margin="{TemplateBinding Padding}"
                                                Uid="ListBoxItemContent"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Focusable="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ControlHoverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlPressedBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
                            <Setter TargetName="ListBoxItemRoot" Property="BorderBrush" Value="{DynamicResource ControlPressedBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlPressedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlHoverBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlPressedBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource HalfTransparentForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ControlForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>